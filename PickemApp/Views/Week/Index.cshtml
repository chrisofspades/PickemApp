@model PickemApp.ViewModels.WeekIndex

@{
    ViewBag.Title = string.Format("Week {0} Results", Model.CurrentWeek.WeekNumber);
}

<nav id="week-menu">
    <span class="nav-header">Week</span>
    <ul class="pagination">
    @foreach (var week in Model.Weeks)
    {
        <li class="@(week.WeekNumber.ToString() == Request.QueryString["week"] ? "active" : "")">@Html.ActionLink((string)string.Format("{0}", week.WeekNumber), "Index", "Week", new { week = @week.WeekNumber, year = @week.Year, completed = Request.QueryString["completed"] }, null)</li>
    }
    </ul>
</nav>

<h2>@Model.CurrentWeek.Year Week @Model.CurrentWeek.WeekNumber</h2>

<ul class="nav nav-pills">
    <li role="presentation" class="@(Request.QueryString["completed"].AsBool() != true ? "active" : "")">@Html.ActionLink("Live Scores", "Index", "Week", new { week = Request.QueryString["week"], year = Request.QueryString["year"], completed = false }, new { @class = Request.QueryString["completed"].AsBool() != true ? "active" : "" })</li>
    <li role="presentation" class="@(Request.QueryString["completed"].AsBool() == true ? "active" : "")">@Html.ActionLink("Completed Games", "Index", "Week", new { week = Request.QueryString["week"], year = Request.QueryString["year"], completed = true }, new { @class = Request.QueryString["completed"].AsBool() == true ? "active" : "" })</li>
</ul>

<div class="table-responsive">
    <table class="table table-condensed standings">
        <tr class="games">
            <th scope="row"></th>
            <td class="number"></td>
            @foreach (PickemApp.Models.Game g in Model.Games)
            {
                <td>
                    <table>
                        <tr class="@((g.WinningTeam == g.VisitorTeam && (Request.QueryString["completed"].AsBool() != true || (Request.QueryString["completed"].AsBool() == true && g.Quarter.StartsWith("F")))) ? "correct" : "")">
                            <td>@g.VisitorTeam</td>
                            <td>@g.VisitorTeamScore</td>

                        </tr>
                        <tr class="@((g.WinningTeam == g.HomeTeam && (Request.QueryString["completed"].AsBool() != true || (Request.QueryString["completed"].AsBool() == true && g.Quarter.StartsWith("F")))) ? "correct" : "")">
                            <td>@g.HomeTeam</td>
                            <td>@g.HomeTeamScore</td>
                        </tr>
                        <tr>
                            <td class="status" colspan="2">@g.Status</td>
                        </tr>
                    </table>
                </td>
            }
        </tr>
        @foreach (var pp in Model.Leaders.OrderByDescending(o => o.CorrectPicks).ThenBy(o => o.TieBreaker))
        {
            <tr class="player">
                <th scope="row">@pp.Player.Name</th>
                <td class="number">@pp.CorrectPicks</td>
                @foreach (var pick in pp.Picks.OrderBy(o => o.Game.Eid.Substring(0, 8)).ThenBy(o => o.Game.Time.PadLeft(5, '0')).ThenBy(o => o.Game.Gsis))
                {
                    <td class="@((pick.PickResult == "W" && (Request.QueryString["completed"].AsBool() != true || (Request.QueryString["completed"].AsBool() == true && pick.Game.Quarter.StartsWith("F")))) ? "correct" : "")">
                        @pick.TeamPicked
                        @if (pick.TotalPoints > 0)
                        {
                            <span class="total-points">(@pick.TotalPoints)</span>
                        }
                    </td>
                }
            </tr>
        }
    </table>
</div>

@foreach (var pp in Model.Leaders.OrderBy(o => o.Player.Name))
{
<div class="player float-left">
    <h3>@pp.Player.Name (@pp.CorrectPicks)</h3>
    <ul>
    @foreach (var pick in pp.Picks)
    {
        <li class="@((pick.PickResult == "W" && (Request.QueryString["completed"].AsBool() != true || (Request.QueryString["completed"].AsBool() == true && pick.Game.Quarter.StartsWith("F")))) ? "correct" : "")">
            <span class="team@((pick.TeamPicked == pick.Game.VisitorTeam && (Request.QueryString["completed"].AsBool() != true || (Request.QueryString["completed"].AsBool() == true && pick.Game.Quarter.StartsWith("F")))) ? " picked" : "")">@pick.Game.VisitorTeam</span> @@ 
            <span class="team@((pick.TeamPicked == pick.Game.HomeTeam && (Request.QueryString["completed"].AsBool() != true || (Request.QueryString["completed"].AsBool() == true && pick.Game.Quarter.StartsWith("F")))) ? " picked" : "")">@pick.Game.HomeTeam</span>
            @if (pick.TotalPoints > 0)
            {
                <span class="total-points">(@pick.TotalPoints)</span>
            }
        </li>
    }
    </ul>
</div>
}

@section scripts
{
    @* Started to figure out how to freeze the header and first column of the table. Not quite working
    <script type="text/javascript">
        var $tableStandings = $("table.standings");
        var $headerRow = $("<table class='table table-condensed standings'>").append($tableStandings.find("tr.games").clone());


        $tableStandings.find("tr.games").children().each(function (i, e) {
            $headerRow.find("tr.games").children().eq(i).outerWidth($(e).outerWidth());
        });

        var $headerRowContainer = $("<div>")
                                    .css({ "position": "absolute", "top": 0, "left": 0 })
                                    .append($headerRow);

        $(".table-responsive").append($headerRowContainer);
    </script>
    *@
}